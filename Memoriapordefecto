#include <EEPROM.h>

char vs1_msj[16]={1,7,10,91,36,37,38,39,40,41,42,43,44,45,46,47};
char vs1_cmd[16]={1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0};
char vs1_ch[16]={10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10};

char vs2_msj[16]={1,7,10,91,48,49,50,51,52,53,54,55,56,57,58,59};
char vs2_cmd[16]={1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0};
char vs2_ch[16]={10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10};

char vsfx_msj[16]={1,7,10,91,60,61,62,63,64,65,66,67,68,69,70,71};
char vsfx_cmd[16]={1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0};
char vsfx_ch[16]={10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10};

char vsbank_msj[16]={1,7,10,91,60,61,62,63,64,65,66,67,68,69,70,71};
char vsbank_cmd[16]={1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0};
char vsbank_ch[16]= {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};

char chrom_msj[16]={1,7,10,11,60,61,62,63,64,65,66,67,68,69,70,71};
char chrom_cmd[16]={1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0};
char chrom_ch[16]= {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1};

char mix_msj[16]={1,1,1,1,80,81,82,83,80,81,82,83,80,81,82,83};
char mix_cmd[16]={1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2};
char mix_ch[16]={1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4};

char user_msj[16]={1,7,10,11,60,61,62,63,64,65,66,67,68,69,70,71};
char user_cmd[16]={1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0};
char user_ch[16]={1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1};

char j=1;

/*char _msj[16]={};
char _cmd[16]={};
char _ch[16]={};*/

void setup() {
char a=0;
//Inicializa memoria la primer vez
  
    a=EEPROM.read(0);
    if(a=!1){
    EEPROM.write(0,1);

grabar(vs1_msj,vs1_cmd,vs1_ch);
grabar(vs2_msj,vs2_cmd,vs2_ch);
grabar(vsfx_msj,vsfx_cmd,vsfx_ch);
grabar(vsbank_msj,vsbank_cmd,vsbank_ch);
grabar(chrom_msj,chrom_cmd,chrom_ch);
grabar(mix_msj,mix_cmd,mix_ch);
grabar(user_msj,user_cmd,user_ch);
grabar(user_msj,user_cmd,user_ch);
grabar(user_msj,user_cmd,user_ch);
}

}//fin setup

void loop() {
  // put your main code here, to run repeatedly:
}

void grabar (char msj[16], char cmd[16], char ch[16]){
char i=0;   
    for (i=0;i<16;i++){ 
    EEPROM.write(j,msj[i]);
    j++;
    EEPROM.write(j,cmd[i]);
    j++;
    EEPROM.write(j,ch[i]);
    j++;
    } 
  }
